<?xml version="1.0" encoding="UTF-8"?>
<project name="SearchService" default="all" xmlns:jacoco="antlib:org.jacoco.ant">
    <!-- java源代码目录 -->
    <property name="src.dir" location="src" />
    <!-- 构建目录 -->
    <property name="build.dir" location="build" />
	 <!--JUNIT 目录-->
	<property name="junit.lib" location="WebRoot\WEB-INF\lib" />
    <!-- class文件目录 -->
    <property name="build.classes" location="${build.dir}/classes" />
    <!-- 打包目录 -->
    <property name="build.war" location="${build.dir}/war" />
	 <property name="junit.dir" location="junitbuild" />
	 <property name="result.jacoco.report.dir" location="jacoco" />
	
	
    <!-- tomcat根目录 -->
    <property name="tomcat.home" location="D:\myeclipseworkspace\apache-tomcat-6.0.24" />
    <!-- <property name="tomcat.lib" location="${tomcat.home}/lib" /> -->
    <!-- web 应用的名字，也是打包后war的名字 -->
    <property name="web.name" value="SearchService" />
    <!-- web 根目录 -->
    <property name="web.root" value="WebRoot" />
    <property name="web.WEB-INF" location="${web.root}/WEB-INF" />
    <property name="web.lib" location="${web.WEB-INF}/lib" />
    <!-- 加载环境变量 -->
    <property environment="env" />

    <!-- 定义编译时的classpath -->
    <path id="compile.path">
        <fileset dir="${web.lib}" includes="*.lib">
        <include name="**/*.jar" />
        </fileset>
       
    </path>

	 

    <target name="init"  depends="clean" description="初始化">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.classes}" />
        <mkdir dir="${build.war}" />
        <echo>初始化工作结束！</echo>
    </target>

    <target name="compile" depends="init" description="编译">
        <javac destdir="build/classes" srcdir="src" includeantruntime="false" fork="true" debug="on">
            <compilerarg line="-encoding UTF-8 " />
            <classpath refid="compile.path" />
        </javac>
        <echo message="编译完成！" />
    </target>


    <target name="war" depends="compile" description="打包war文件">
        <!-- linux 缺少包 -->
        <copy file="src/search-consumer.xml" todir="build/classes"/>
    	<copy file="src/search-provider.xml" todir="build/classes"/>
        <war destfile="${build.war}/${web.name}.war">
            <fileset dir="${web.root}" includes="**/*.*" />
            <lib dir="${web.lib}" />
            <webinf dir="${web.WEB-INF}" />
            <classes dir="${build.classes}" />
        </war>
        <echo>打包完成！</echo>
    </target>

    <target name="deploy" depends="war" description="发布">
        <copy todir="${tomcat.home}/webapps">
            <fileset dir="${build.war}" includes="*.war" />
        </copy>
        <echo>已发布到Tomcat！</echo>
    </target>

	  <target name="clean"   description="清理">
	        <delete dir="${build.dir}" />
	        <delete dir="${tomcat.home}/webapps/${web.name}"/>
	        <delete file="${tomcat.home}/webapps/${web.name}.war"/>
	        <echo>清理完成！</echo>
	    </target>

  <!--单独使用
	  <target name="junit" depends="compile"> 
	   <junit printsummary="on" fork="true" showoutput="true"> 
	    <classpath>
	     <pathelement path="${build.classes}"/> 
	     <pathelement path="${junit.lib}\commons-logging.jar"/> 
	     <pathelement path="${junit.lib}\httpclient-4.4.1.jar"/> 
	     <pathelement path="${junit.lib}\httpcore-4.4.1.jar"/> 
	    	
	    </classpath> 
	    <formatter type="plain" usefile="false"/>  
    	<test name="org.shirdrn.platform.dubbo.service.rpc.server.TestSolrSearchServer"></test>
	   </junit> 
	</target>
	-->

<!-- being-->
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
	        <classpath path="${basedir}/devlib/jacocoant.jar" />
	</taskdef>
   <!--使用覆盖率工具，进行单元测试 -->
    	<target name="unitTest" depends="compile">
    	        <mkdir dir="${junit.dir}"/>
    	        <jacoco:coverage destfile="${basedir}/ut.exec">
    	          
    		       <junit printsummary="on" fork="true" showoutput="true"> 
    			    <classpath>
    			     <pathelement path="${build.classes}"/> 
    			     <pathelement path="${junit.lib}\commons-logging.jar"/> 
    			     <pathelement path="${junit.lib}\httpclient-4.4.1.jar"/> 
    			     <pathelement path="${junit.lib}\httpcore-4.4.1.jar"/> 
    			    	
    			    </classpath> 
    			    <formatter type="plain" usefile="false"/>  
    		    	<test name="org.shirdrn.platform.dubbo.service.rpc.server.TestSolrSearchServer"></test>
    			   </junit> 
    	        </jacoco:coverage>
    	</target>
	
	<!--生成本地的覆盖率的报告999-->
	<target name="jacocoReport" depends="unitTest">
	        <delete dir="${basedir}/jacoco"/>
	        <mkdir dir="${result.jacoco.report.dir}/ut"/>
	        <jacoco:report>
	            <executiondata>
	                <file file="${basedir}/ut.exec"/>
	            </executiondata>

	            <structure name="jacoco_demo">
	                <classfiles>
	                    <fileset dir="${build.dir}"/>
	                </classfiles>
	                <sourcefiles encoding="UTF-8">
	                    <fileset dir="${src.dir}"/>
	                </sourcefiles>
	            </structure>
	            <html destdir="${result.jacoco.report.dir}/ut"/>
	        </jacoco:report>
	</target>

<!-- end-->
	
	<target name="all" depends="war" />
</project>
